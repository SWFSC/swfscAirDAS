% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/airdas_sight.R
\name{airdas_sight}
\alias{airdas_sight}
\alias{airdas_sight.data.frame}
\alias{airdas_sight.airdas_df}
\title{Aerial DAS sightings}
\usage{
airdas_sight(x)

\method{airdas_sight}{data.frame}(x)

\method{airdas_sight}{airdas_df}(x)
}
\arguments{
\item{x}{\code{airdas_df} object; output from \code{\link{airdas_process}}, 
or a data frame that can be coerced to a \code{airdas_df} object}
}
\value{
Data frame with 1) the columns from \code{x}, excluding the 'Data#' columns,
  and 2) columns with sighting information (observer, species, etc.) 
  extracted from 'Data#' columns as specified in Details.
  The data frame has one row for each sighting,
  or one row for each species of each sighting if 
  it is a multi-species sighting.
}
\description{
Extract sighting information from aerial DAS data
}
\details{
AirDAS events contain specific information in the 'Data#' columns,
  with the information depending on the event code for that row.
  This function extracts relevant data for sighting events, and returns a
  data frame with dedicated columns for each piece of sighting information.
  This function recognizes the following types of sightings: 
  marine mammal sightings (event code "S"), marine mammal resights (code "s"), 
  and turtle sightings (code "t"). 
  Multi-species (mixed species) marine mammal sightings are also followed by a "1" event.
  See \code{\link{airdas_format_pdf}} for more information about events and event formats.
  
  Abbreviations used in column names: Gs = group size, Sp = species, 
  Mixed = mixed species (multi-species) sighting.

  A 'standard sighting' ('SightStd' in output data frame) is a sighting 
  made by ObsL, ObsB, or ObsR (not the data recorder or pilot).
  
  Multi-species group sizes are rounded to nearest whole number using \code{round(, 0)}.
  
  Note that this function can handle multiple file types in \code{x};
  for instance \code{x} could be combined PHOCOENA and TURTLE data.
}
\examples{
y <- system.file("airdas_sample.das", package = "swfscAirDAS")
y.proc <- airdas_process(y)

airdas_sight(y.proc)

}
